AWSTemplateFormatVersion: "2010-09-09"

Description: AWS CloudFormation workshop - Nested stacks - Root template (uksb-1q9p31idr).

Parameters:
  S3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-.]*[0-9a-zA-Z])*$
    ConstraintDescription: Bucket name can include numbers, lowercase letters, uppercase letters, periods (.), and hyphens (-). It cannot start or end with a hyphen (-).
    Description: S3 bucket name for the Nested Stacks. S3 bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Type: String
    Default: s3-with-cloudformation

  AvailabilityZones:
    Type: List<AWS::EC2::AvailabilityZone::Name>
    Description: The list of Availability Zones to use for the subnets in the VPC. Select 1 AZs.
    Default: us-east-1a,us-east-1b
    # Only work in this zones the reason it's the port

  VPCName:
    Type: String
    Description: The name of the VPC.
    Default: cfn-workshop-vpc

  VPCCidr:
    Type: String
    Description: The CIDR block for the VPC.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16

  PublicSubnet1Cidr:
    Type: String
    Description: The CIDR block for the public subnet located in Availability Zone 1.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/24

  PublicSubnet2Cidr:
    Type: String
    Description: The CIDR block for the public subnet located in Availability Zone 2.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.1.0/24
  
  EnvironmentType:
    Description: 'Specify the Environment type of the stack.'
    Type: String
    Default: Test
    AllowedValues:
      - Dev
      - Test
      - Prod
    ConstraintDescription: 'Specify either Dev, Test or Prod.'

  # I must find a way to encrypt the password!!!
  RDSMasterUsername:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-.]*[0-9a-zA-Z])*$
    ConstraintDescription: Master User name can include numbers, lowercase letters, uppercase letters, periods (.), and hyphens (-). It cannot start or end with a hyphen (-).
    Description: RDS Database Master User name.
    Type: String
    Default: myusername
  
  RDSMasterUserPassword:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-.]*[0-9a-zA-Z])*$
    ConstraintDescription:  Master User Password can include numbers, lowercase letters, uppercase letters, periods (.), and hyphens (-). It cannot start or end with a hyphen (-).
    Description: RDS Database Master User Password.
    Type: String
    Default: mypassword

Resources:
  
  VpcStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3BucketName}.s3.amazonaws.com/vpc.yaml
      TimeoutInMinutes: 20
      Parameters:
        AvailabilityZones:
          Fn::Join:
            - ','
            - !Ref AvailabilityZones
        VPCCidr: !Ref VPCCidr
        VPCName: !Ref VPCName
        PublicSubnet1Cidr: !Ref PublicSubnet1Cidr
        PublicSubnet2Cidr: !Ref PublicSubnet2Cidr

  IamStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3BucketName}.s3.amazonaws.com/iam.yaml
      TimeoutInMinutes: 10

  # EC2Stack:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: !Sub https://${S3BucketName}.s3.amazonaws.com/ec2.yaml
  #     TimeoutInMinutes: 20
  #     Parameters:
  #       EnvironmentType: !Ref EnvironmentType
  #       VpcId: !GetAtt VpcStack.Outputs.VpcId
  #       SubnetId: !GetAtt VpcStack.Outputs.PublicSubnet1
  #       WebServerInstanceProfile: !GetAtt IamStack.Outputs.WebServerInstanceProfile
  #       # RDSEndpointAddress: !GetAtt RDSStack.Outputs.RDSEndpointAddress
  #       # RDSMasterUsername: !Ref RDSMasterUsername
  #       # RDSMasterUserPassword: !Ref RDSMasterUserPassword
  #   # DependsOn:
  #   #   - RDSStack

  # RDSStack:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: !Sub https://${S3BucketName}.s3.amazonaws.com/RDS.yaml
  #     TimeoutInMinutes: 20
  #     Parameters:
  #       SubnetId1: !GetAtt VpcStack.Outputs.PrivateSubnet1
  #       SubnetId2: !GetAtt VpcStack.Outputs.PrivateSubnet2
  #       RDSMasterUsername: !Ref RDSMasterUsername
  #       RDSMasterUserPassword: !Ref RDSMasterUserPassword
  #       VpcId: !GetAtt VpcStack.Outputs.VpcId
  #   DependsOn:
  #     - VpcStack
  #     - IamStack

# Outputs:
#   WebsiteURL:
#     Value: !GetAtt EC2Stack.Outputs.WebsiteURL
